/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package ConnectionFromSQL.VIEW;

import ConnectionFromSQL.DAO.UsuarioDAO;
import ConnectionFromSQL.DTO.UsuarioDTO;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mathe
 */
public class InternalInvest extends javax.swing.JInternalFrame {

    /**
     * Creates new form InternalInvest
     */
    public InternalInvest() {
        initComponents();
        AtualizaIN();
        listarSaldo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrupoInvest = new javax.swing.ButtonGroup();
        popUpHist = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaInvest = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaResgate = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        mainPanelInvest = new javax.swing.JPanel();
        lblInvest = new javax.swing.JLabel();
        investInput = new javax.swing.JTextField();
        btnInvestir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lblFrase = new javax.swing.JLabel();
        lblTotalInvestAtivo = new javax.swing.JLabel();
        lblInvest1 = new javax.swing.JLabel();
        inputResgate = new javax.swing.JTextField();
        btnResgate = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        rendaFixaBtn = new javax.swing.JRadioButton();
        cdiBtn = new javax.swing.JRadioButton();
        cdbBtn = new javax.swing.JRadioButton();
        lcaBtn = new javax.swing.JRadioButton();
        descPanel = new javax.swing.JPanel();
        descricaoLbl = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        totalInvest = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        historicoBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        toggleSaldo = new javax.swing.JToggleButton();
        campoSaldo = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        campoSaldo1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        popUpHist.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        popUpHist.setTitle("Histórico de investimentos");
        popUpHist.setMaximumSize(new java.awt.Dimension(980, 730));
        popUpHist.setMinimumSize(new java.awt.Dimension(980, 730));
        popUpHist.setName("Historico"); // NOI18N
        popUpHist.setPreferredSize(new java.awt.Dimension(980, 730));

        tabelaInvest.setAutoCreateRowSorter(true);
        tabelaInvest.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tabelaInvest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo de insvestimento", " Valor investido", "Data e hora"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaInvest);

        tabelaResgate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tabelaResgate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo de insvestimento", "Valor resgatado", "Data e hora"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabelaResgate);

        javax.swing.GroupLayout popUpHistLayout = new javax.swing.GroupLayout(popUpHist.getContentPane());
        popUpHist.getContentPane().setLayout(popUpHistLayout);
        popUpHistLayout.setHorizontalGroup(
            popUpHistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(popUpHistLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(popUpHistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 968, Short.MAX_VALUE))
                .addContainerGap())
        );
        popUpHistLayout.setVerticalGroup(
            popUpHistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(popUpHistLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        setBorder(null);
        setMaximumSize(new java.awt.Dimension(990, 766));
        setMinimumSize(new java.awt.Dimension(990, 766));
        setPreferredSize(new java.awt.Dimension(990, 766));

        jPanel1.setBackground(new java.awt.Color(20, 26, 38));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainPanelInvest.setBackground(new java.awt.Color(235, 235, 235));
        mainPanelInvest.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        mainPanelInvest.setForeground(new java.awt.Color(200, 200, 200));
        mainPanelInvest.setToolTipText("");

        lblInvest.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblInvest.setForeground(new java.awt.Color(51, 51, 51));
        lblInvest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInvest.setText("Quanto deseja investir?");
        lblInvest.setToolTipText("");

        investInput.setBackground(new java.awt.Color(207, 233, 236));
        investInput.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        investInput.setForeground(new java.awt.Color(51, 51, 51));
        investInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        investInput.setToolTipText("");
        investInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                investInputActionPerformed(evt);
            }
        });

        btnInvestir.setBackground(new java.awt.Color(16, 148, 164));
        btnInvestir.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        btnInvestir.setForeground(new java.awt.Color(51, 51, 51));
        btnInvestir.setText("Investir");
        btnInvestir.setToolTipText("");
        btnInvestir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvestirActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("R$");
        jLabel2.setToolTipText("");

        lblFrase.setBackground(new java.awt.Color(51, 51, 51));
        lblFrase.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblFrase.setForeground(new java.awt.Color(51, 51, 51));
        lblFrase.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFrase.setText("Aqui aparecerá seu valor total de investimento conforme o ativo selecionado");

        lblTotalInvestAtivo.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        lblTotalInvestAtivo.setForeground(new java.awt.Color(51, 51, 51));
        lblTotalInvestAtivo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTotalInvestAtivo.setToolTipText("");

        lblInvest1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblInvest1.setForeground(new java.awt.Color(51, 51, 51));
        lblInvest1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInvest1.setText("Quanto deseja investir?");
        lblInvest1.setToolTipText("");

        inputResgate.setBackground(new java.awt.Color(210, 237, 228));
        inputResgate.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        inputResgate.setForeground(new java.awt.Color(51, 51, 51));
        inputResgate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        inputResgate.setToolTipText("");
        inputResgate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputResgateActionPerformed(evt);
            }
        });

        btnResgate.setBackground(new java.awt.Color(105, 196, 168));
        btnResgate.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        btnResgate.setForeground(new java.awt.Color(51, 51, 51));
        btnResgate.setText("Resgatar");
        btnResgate.setToolTipText("");
        btnResgate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResgateActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("R$");
        jLabel4.setToolTipText("");

        javax.swing.GroupLayout mainPanelInvestLayout = new javax.swing.GroupLayout(mainPanelInvest);
        mainPanelInvest.setLayout(mainPanelInvestLayout);
        mainPanelInvestLayout.setHorizontalGroup(
            mainPanelInvestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblFrase, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(mainPanelInvestLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelInvestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnInvestir, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(investInput, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelInvestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnResgate, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputResgate, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(108, 108, 108))
            .addGroup(mainPanelInvestLayout.createSequentialGroup()
                .addGroup(mainPanelInvestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelInvestLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTotalInvestAtivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(mainPanelInvestLayout.createSequentialGroup()
                        .addComponent(lblInvest, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblInvest1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        mainPanelInvestLayout.setVerticalGroup(
            mainPanelInvestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelInvestLayout.createSequentialGroup()
                .addComponent(lblFrase, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(lblTotalInvestAtivo, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(mainPanelInvestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInvest)
                    .addComponent(lblInvest1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelInvestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelInvestLayout.createSequentialGroup()
                        .addGroup(mainPanelInvestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(investInput))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnInvestir)
                        .addGap(90, 90, 90))
                    .addGroup(mainPanelInvestLayout.createSequentialGroup()
                        .addGroup(mainPanelInvestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputResgate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnResgate)
                        .addContainerGap())))
        );

        jPanel1.add(mainPanelInvest, new org.netbeans.lib.awtextra.AbsoluteConstraints(216, 87, 720, 480));

        rendaFixaBtn.setBackground(new java.awt.Color(101, 137, 152));
        btnGrupoInvest.add(rendaFixaBtn);
        rendaFixaBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rendaFixaBtn.setForeground(new java.awt.Color(51, 51, 51));
        rendaFixaBtn.setText("Renda fixa");
        rendaFixaBtn.setToolTipText("");
        rendaFixaBtn.setBorder(null);
        rendaFixaBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rendaFixaBtn.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        rendaFixaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rendaFixaBtnActionPerformed(evt);
            }
        });
        jPanel1.add(rendaFixaBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 425, 204, 76));

        cdiBtn.setBackground(new java.awt.Color(187, 203, 209));
        btnGrupoInvest.add(cdiBtn);
        cdiBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cdiBtn.setForeground(new java.awt.Color(51, 51, 51));
        cdiBtn.setText("CDI");
        cdiBtn.setBorder(null);
        cdiBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cdiBtn.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        cdiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cdiBtnActionPerformed(evt);
            }
        });
        jPanel1.add(cdiBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 143, 204, 76));

        cdbBtn.setBackground(new java.awt.Color(161, 183, 192));
        btnGrupoInvest.add(cdbBtn);
        cdbBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cdbBtn.setForeground(new java.awt.Color(51, 51, 51));
        cdbBtn.setText("CDB");
        cdbBtn.setBorder(null);
        cdbBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cdbBtn.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        cdbBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cdbBtnActionPerformed(evt);
            }
        });
        jPanel1.add(cdbBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 237, 204, 76));

        lcaBtn.setBackground(new java.awt.Color(135, 163, 175));
        btnGrupoInvest.add(lcaBtn);
        lcaBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lcaBtn.setForeground(new java.awt.Color(51, 51, 51));
        lcaBtn.setText("LCA");
        lcaBtn.setBorder(null);
        lcaBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lcaBtn.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        lcaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lcaBtnActionPerformed(evt);
            }
        });
        jPanel1.add(lcaBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 331, 204, 76));

        descPanel.setBackground(new java.awt.Color(235, 235, 235));
        descPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        descPanel.setForeground(new java.awt.Color(200, 200, 200));
        descPanel.setPreferredSize(new java.awt.Dimension(710, 53));

        descricaoLbl.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        descricaoLbl.setForeground(new java.awt.Color(51, 51, 51));
        descricaoLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        descricaoLbl.setText("Investimentos bancários");
        descricaoLbl.setToolTipText("");

        javax.swing.GroupLayout descPanelLayout = new javax.swing.GroupLayout(descPanel);
        descPanel.setLayout(descPanelLayout);
        descPanelLayout.setHorizontalGroup(
            descPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(descPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(descricaoLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        descPanelLayout.setVerticalGroup(
            descPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, descPanelLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(descricaoLbl)
                .addGap(15, 15, 15))
        );

        jPanel1.add(descPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(216, 16, 720, -1));

        jPanel2.setBackground(new java.awt.Color(235, 235, 235));
        jPanel2.setMaximumSize(new java.awt.Dimension(710, 488));
        jPanel2.setMinimumSize(new java.awt.Dimension(710, 488));

        totalInvest.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        totalInvest.setForeground(new java.awt.Color(51, 51, 51));
        totalInvest.setToolTipText("");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Total investido atravez das opções:");
        jLabel3.setToolTipText("");

        historicoBtn.setBackground(new java.awt.Color(102, 102, 255));
        historicoBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        historicoBtn.setForeground(new java.awt.Color(255, 255, 255));
        historicoBtn.setText("Histórico");
        historicoBtn.setToolTipText("Histórico de investimentos");
        historicoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historicoBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(totalInvest, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(historicoBtn)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalInvest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(historicoBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(35, 35, 35))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 580, 720, 100));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("R$");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 30, 40));

        toggleSaldo.setSelected(true);
        toggleSaldo.setText("Revelar");
        toggleSaldo.setToolTipText("");
        toggleSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleSaldoActionPerformed(evt);
            }
        });
        jPanel1.add(toggleSaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, -1, -1));

        campoSaldo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        campoSaldo.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(campoSaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 80, 40));
        campoSaldo.setVisible(false);

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Saldo bancário");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 160, 20));

        campoSaldo1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        campoSaldo1.setForeground(new java.awt.Color(255, 255, 255));
        campoSaldo1.setText("****");
        campoSaldo1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(campoSaldo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, -1, 30));

        jLabel1.setBackground(new java.awt.Color(200, 200, 200));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/projeto/imagens/rubik_bg.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -4, 990, 750));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public void AtualizaTabelaInvest() {
        try {
            UsuarioDAO objUsuarioDAO = new UsuarioDAO();
            UsuarioDTO userDTO = new UsuarioDTO();

            DefaultTableModel model = (DefaultTableModel) tabelaInvest.getModel();

            ArrayList<UsuarioDTO> lista = objUsuarioDAO.HistoricoInvestimento();

            for (int i = 0; i < lista.size(); i++) {
                model.addRow(new Object[]{
                    " " + lista.get(i).getTipoDeInvestimento(),
                    " R$ " + lista.get(i).getValorInvestido(),
                    " " + lista.get(i).getDataInvestimento()                        
                });

                // Imprimir os valores no console
                System.out.println("Tipo de Investimento: " + lista.get(i).getTipoDeInvestimento());
                System.out.println("Valor Investido: R$ " + lista.get(i).getValorInvestido());
                System.out.println("Data de Investimento: " + lista.get(i).getDataInvestimento());
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Erro no listavaloresTED" + erro);
        }      
        
    }
    
    public void AtualizaTabelaResgate() {
        try {
            UsuarioDAO objUsuarioDAO = new UsuarioDAO();

            DefaultTableModel model = (DefaultTableModel) tabelaResgate.getModel();

            ArrayList<UsuarioDTO> lista = objUsuarioDAO.HistoricoInvestimentoResgate();

            for (int i = 0; i < lista.size(); i++) {
                model.addRow(new Object[]{
                    " " + lista.get(i).getTipoDeResgate(),
                    "R$ " + lista.get(i).getValorResgatado(),
                    " " + lista.get(i).getDataResgate()
                });                
            }
            
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Erro no listavaloresTED" + erro);
        }

    }
    
    private void btnInvestirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvestirActionPerformed
        UsuarioDAO userDAO = new UsuarioDAO();
        if (investInput.getText().toString().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nenhum valor foi inserido");
        } else {
            if (cdiBtn.isSelected()) {
                RegistraCDI();
                LimparCampo();
                AtualizaCDI();
                userDAO.BDInvestimentoCDI();
            } else if (cdbBtn.isSelected()) {
                RegistraCDB();
                LimparCampo();
                AtualizaCDB();
                userDAO.BDInvestimentoCDB();
            } else if (lcaBtn.isSelected()) {
                RegistraLCA();
                LimparCampo();
                AtualizaLCA();
                userDAO.BDInvestimentoLCA();
            } else if (rendaFixaBtn.isSelected()) {
                RegistraRendaF();
                LimparCampo();
                AtualizaRendaFixa();                
                userDAO.BDInvestimentoRF();
            } else if (investInput.getText().toString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Nenhum valor foi inserido");
            } else {
                JOptionPane.showMessageDialog(null, "Nenhuma forma de investimento foi selecionada.");
            }
        }
        LimparCampo();
        AtualizaIN();        
        listarSaldo();
    }//GEN-LAST:event_btnInvestirActionPerformed
    
    
    private void investInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_investInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_investInputActionPerformed

    private void AtualizaCDI(){
        UsuarioDTO userDto = new UsuarioDTO();
        UsuarioDAO userDao = new UsuarioDAO();
        descricaoLbl.setText("CDI");
        lblInvest.setText("Quanto deseja investir em CDI?");
        Color bg = new Color(187, 203, 209);
        mainPanelInvest.setBackground(bg);
        descPanel.setBackground(bg);
        //////////
        try {
            userDao.AtualizaInterfaceCDI(userDto);
        } catch (SQLException ex) {
            Logger.getLogger(InternalInvest.class.getName()).log(Level.SEVERE, null, ex);
        }
        lblFrase.setText("O valor investido em seu nome no ativo CDI esta exibido abaixo.");
        lblTotalInvestAtivo.setText("R$ " + userDto.getCdiInvest());
    }
    
    private void cdiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cdiBtnActionPerformed
        AtualizaCDI();
    }//GEN-LAST:event_cdiBtnActionPerformed

    private void AtualizaCDB(){
        UsuarioDTO userDto = new UsuarioDTO();
        UsuarioDAO userDao = new UsuarioDAO();
        descricaoLbl.setText("CDB");
        lblInvest.setText("Quanto deseja investir em CDB?");
        Color bg = new Color(161, 183, 192);
        descPanel.setBackground(bg);
        mainPanelInvest.setBackground(bg);
        ///////////////
        try {
            userDao.AtualizaInterfaceCDB(userDto);
        } catch (SQLException ex) {
            Logger.getLogger(InternalInvest.class.getName()).log(Level.SEVERE, null, ex);
        }
        lblFrase.setText("O valor investido em seu nome no ativo CDB esta exibido abaixo.");
        lblTotalInvestAtivo.setText("R$ " + userDto.getCdbInvest());
    }
    
    private void cdbBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cdbBtnActionPerformed
        AtualizaCDB();
    }//GEN-LAST:event_cdbBtnActionPerformed

    private void AtualizaLCA (){
        UsuarioDTO userDto = new UsuarioDTO();
        UsuarioDAO userDao = new UsuarioDAO();
        descricaoLbl.setText("LCA");
        lblInvest.setText("Quanto deseja investir em LCA?");
        Color bg = new Color(135, 163, 175);
        mainPanelInvest.setBackground(bg);
        descPanel.setBackground(bg);
        //////////////
        try {
            userDao.AtualizaInterfaceLCA(userDto);
        } catch (SQLException ex) {
            Logger.getLogger(InternalInvest.class.getName()).log(Level.SEVERE, null, ex);
        }
        lblFrase.setText("O valor investido em seu nome no ativo LCA esta exibido abaixo.");
        lblTotalInvestAtivo.setText("R$ " + userDto.getLcaInvest());
    }
    
    private void lcaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lcaBtnActionPerformed
        AtualizaLCA();
    }//GEN-LAST:event_lcaBtnActionPerformed
    
    private void AtualizaRendaFixa(){
        UsuarioDTO userDto = new UsuarioDTO();
        UsuarioDAO userDao = new UsuarioDAO();
        descricaoLbl.setText("Renda fixa");
        lblInvest.setText("Quanto deseja investir em Renda Fixa?");
        Color bg = new Color(101, 137, 152);
        mainPanelInvest.setBackground(bg);
        descPanel.setBackground(bg);
        //////////////////
        try {
            userDao.AtualizaInterfaceRENDA_FIXA(userDto);
        } catch (SQLException ex) {
            Logger.getLogger(InternalInvest.class.getName()).log(Level.SEVERE, null, ex);
        }
        lblFrase.setText("O valor investido em seu nome no ativo Renda fixa esta exibido abaixo.");
        lblTotalInvestAtivo.setText("R$ " + userDto.getRendaF());
    }
    
    private void rendaFixaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rendaFixaBtnActionPerformed
        AtualizaRendaFixa();
    }//GEN-LAST:event_rendaFixaBtnActionPerformed

    private void inputResgateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputResgateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputResgateActionPerformed

    private void btnResgateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResgateActionPerformed
        UsuarioDAO userDAO = new UsuarioDAO();
        if (inputResgate.getText().toString().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nenhum valor foi inserido");
        } else {

            if (cdiBtn.isSelected()) {
                ResgataCDI();
                LimparCampo();
                AtualizaCDI(); 
                userDAO.BDResgataCDI();
            } else if (cdbBtn.isSelected()) {
                ResgataCDB();
                LimparCampo();
                AtualizaCDB();
                userDAO.BDResgataCDB();
            } else if (lcaBtn.isSelected()) {
                ResgataLCA();
                LimparCampo();
                AtualizaLCA();
                userDAO.BDResgataLCA();
            } else if (rendaFixaBtn.isSelected()) {
                ResgataRendaF();
                LimparCampo();
                AtualizaRendaFixa();
                userDAO.BDResgataRF();
            } else {
                JOptionPane.showMessageDialog(null, "Nenhuma forma de investimento foi selecionada.");
            }
        }
        
        LimparCampo();
        AtualizaIN();
        listarSaldo();
    }//GEN-LAST:event_btnResgateActionPerformed

    private void toggleSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleSaldoActionPerformed

        if(toggleSaldo.isSelected()){
            campoSaldo.setVisible(false);
            campoSaldo1.setVisible(true);
            campoSaldo1.setForeground(Color.WHITE);
            toggleSaldo.setForeground(Color.black);
            toggleSaldo.setText("Revelar");

        }else{
            campoSaldo.setVisible(true);
            campoSaldo1.setVisible(false);
            campoSaldo.setForeground(Color.white);
            toggleSaldo.setText("Ocultar");
            toggleSaldo.setForeground(Color.black);
        }
    }//GEN-LAST:event_toggleSaldoActionPerformed

    private void historicoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historicoBtnActionPerformed
        AtualizaTabelaInvest();
        AtualizaTabelaResgate();
        popUpHist.setVisible(true);
    }//GEN-LAST:event_historicoBtnActionPerformed
    
    //////////////////// Registra ////////////////
//<editor-fold defaultstate="collapsed" desc="Registradore-de-Investimento">
     
    private void RegistraCDI(){
        float registroValorTransf = Float.parseFloat(investInput.getText());
        
        UsuarioDTO objUsuarioDTO = new UsuarioDTO();
        objUsuarioDTO.setId_investimento(registroValorTransf);
        
        UsuarioDAO objUsuarioDAO = new UsuarioDAO();
        objUsuarioDAO.RegistraCDI(objUsuarioDTO);
    }
    
    private void RegistraCDB(){
        float registroValorTransf = Float.parseFloat(investInput.getText());
        
        UsuarioDTO objUsuarioDTO = new UsuarioDTO();
        objUsuarioDTO.setId_investimento(registroValorTransf);
        
        UsuarioDAO objUsuarioDAO = new UsuarioDAO();
        objUsuarioDAO.RegistraCDB(objUsuarioDTO);
    }
    
    private void RegistraLCA(){
        float registroValorTransf = Float.parseFloat(investInput.getText());
        
        UsuarioDTO objUsuarioDTO = new UsuarioDTO();
        objUsuarioDTO.setId_investimento(registroValorTransf);
        
        UsuarioDAO objUsuarioDAO = new UsuarioDAO();
        objUsuarioDAO.RegistraLCA(objUsuarioDTO);
    }
    
    private void RegistraRendaF(){
        float registroValorTransf = Float.parseFloat(investInput.getText());
        
        UsuarioDTO objUsuarioDTO = new UsuarioDTO();
        objUsuarioDTO.setId_investimento(registroValorTransf);
        
        UsuarioDAO objUsuarioDAO = new UsuarioDAO();
        objUsuarioDAO.RegistraRendaFixa(objUsuarioDTO);
    }
    
    //</editor-fold>
    
    private void AtualizaIN(){
        UsuarioDTO objUsuarioDTO = new UsuarioDTO();
        
        UsuarioDAO objUsuarioDAO = new UsuarioDAO();
        objUsuarioDAO.AtualizaInvest(objUsuarioDTO);
        totalInvest.setText("R$ " + Float.toString(objUsuarioDTO.getId_InvestTotal()));
        
    }
    
    
//<editor-fold defaultstate="collapsed" desc="Resgate-de-Investimento">            
    private void ResgataCDI() {
        UsuarioDAO objUsuarioDAO = new UsuarioDAO();
        UsuarioDTO objUsuarioDTO = new UsuarioDTO();
        float resgataInput = Float.parseFloat(inputResgate.getText());
        
       
        objUsuarioDTO.setInputResgate(resgataInput);
               
        objUsuarioDAO.ResgataCDI();
        
    }
    
    private void ResgataCDB() {
        UsuarioDAO objUsuarioDAO = new UsuarioDAO();
        UsuarioDTO objUsuarioDTO = new UsuarioDTO();
        float resgataInput = Float.parseFloat(inputResgate.getText());
        
       
        objUsuarioDTO.setInputResgate(resgataInput);
               
        objUsuarioDAO.ResgataCDB();
        
    }
    
    private void ResgataLCA() {
        UsuarioDAO objUsuarioDAO = new UsuarioDAO();
        UsuarioDTO objUsuarioDTO = new UsuarioDTO();
        float resgataInput = Float.parseFloat(inputResgate.getText());
        
       
        objUsuarioDTO.setInputResgate(resgataInput);
               
        objUsuarioDAO.ResgataLCA();
    }
    
    private void ResgataRendaF() {
        UsuarioDAO objUsuarioDAO = new UsuarioDAO();
        UsuarioDTO objUsuarioDTO = new UsuarioDTO();
        float resgataInput = Float.parseFloat(inputResgate.getText());
        
       
        objUsuarioDTO.setInputResgate(resgataInput);
               
        objUsuarioDAO.ResgataRF();
        
    }
    //</editor-fold>
    
    
    public void listarSaldo(){        
        /*Método responsavel por imprimir na interface grafica as informações
        recebidas pelo retorno do UsuarioDAO
        */
        UsuarioDTO user = new UsuarioDTO();
        try {
            UsuarioDAO objUsuarioDAO = new UsuarioDAO();
            
            UsuarioDTO UserSaldo = objUsuarioDAO.PerfilSaldoTrnasacoes();       
            float saldo = UserSaldo.getId_saldo();
            String saldoString = String.valueOf(saldo);
            campoSaldo.setText(saldoString);
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Listar erro" 
            + erro);
        }
    }
        
        
    private void LimparCampo (){
        investInput.setText("");
        inputResgate.setText("");
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGrupoInvest;
    private javax.swing.JButton btnInvestir;
    private javax.swing.JButton btnResgate;
    private javax.swing.JLabel campoSaldo;
    private javax.swing.JLabel campoSaldo1;
    private javax.swing.JRadioButton cdbBtn;
    private javax.swing.JRadioButton cdiBtn;
    private javax.swing.JPanel descPanel;
    private javax.swing.JLabel descricaoLbl;
    private javax.swing.JButton historicoBtn;
    private javax.swing.JTextField inputResgate;
    private javax.swing.JTextField investInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblFrase;
    private javax.swing.JLabel lblInvest;
    private javax.swing.JLabel lblInvest1;
    private javax.swing.JLabel lblTotalInvestAtivo;
    private javax.swing.JRadioButton lcaBtn;
    private javax.swing.JPanel mainPanelInvest;
    private javax.swing.JDialog popUpHist;
    private javax.swing.JRadioButton rendaFixaBtn;
    private javax.swing.JTable tabelaInvest;
    private javax.swing.JTable tabelaResgate;
    private javax.swing.JToggleButton toggleSaldo;
    private javax.swing.JLabel totalInvest;
    // End of variables declaration//GEN-END:variables

}
